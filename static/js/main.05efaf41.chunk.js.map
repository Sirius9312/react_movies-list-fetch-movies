{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","addMovie","useState","titleMovie","setTitleMovie","errorMessageMovies","setErrorMessageMovies","submitSpiner","setSubmitSpiner","setMovie","onSubmit","e","query","preventDefault","fetch","then","res","json","catch","Response","Error","response","Title","Plot","Poster","imdbID","finally","htmlFor","type","id","name","placeholder","value","onChange","target","disabled","trim","onClick","mov","some","movi","App","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.05efaf41.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie?.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie?.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie?.description}\n        <br />\n        <a href={movie?.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[],\n  addMovie: (movies: Movie[]) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ movies, addMovie }) => {\n  const [titleMovie, setTitleMovie] = useState('');\n  const [errorMessageMovies, setErrorMessageMovies] = useState('');\n  const [submitSpiner, setSubmitSpiner] = useState(false);\n  const [movie, setMovie] = useState<Movie | null>(null);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    setSubmitSpiner(true);\n    getMovie(titleMovie).then(response => {\n      if ('Error' in response) {\n        // eslint-disable-next-line\n        throw 'Error from server!';\n      }\n\n      setMovie({\n        title: response.Title,\n        description: response.Plot,\n        imgUrl: response.Poster === 'N/A'\n          ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n          : response.Poster,\n        imdbUrl: `https://www.imdb.com/title/${response.imdbID}`,\n        imdbId: response.imdbID,\n      });\n    })\n      .catch(() => {\n        setErrorMessageMovies('Can\\'t find a movie with such a title');\n      })\n      .finally(() => setSubmitSpiner(false));\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitleMovie(e.target.value);\n    setErrorMessageMovies('');\n  };\n\n  const handleAdd = (mov: Movie) => {\n    if (movies.some((movi) => movi.title === mov.title)) {\n      setMovie(null);\n    } else {\n      addMovie([...movies, mov]);\n      setMovie(null);\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              name=\"t\"\n              placeholder=\"Enter a title to search\"\n              className=\"input\"\n              value={titleMovie}\n              onChange={handleChange}\n            />\n          </div>\n\n          {\n            errorMessageMovies && (\n              <p className=\"help is-danger\" data-cy=\"errorMessage\">\n                {errorMessageMovies}\n              </p>\n            )\n          }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={submitSpiner ? 'button is-light is-loading'\n                : 'button is-light'}\n              disabled={\n                !titleMovie.trim()\n              }\n            >\n              {movie ? 'Search again' : 'Find a movie'}\n            </button>\n          </div>\n\n          {\n            movie && (\n              <div className=\"control\">\n                <button\n                  data-cy=\"addButton\"\n                  type=\"button\"\n                  className=\"button is-primary\"\n                  onClick={() => handleAdd(movie)}\n                >\n                  Add to the list\n                </button>\n              </div>\n            )\n          }\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=ee7cee61';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          addMovie={setMovies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}